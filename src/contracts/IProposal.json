{
  "contractName": "IProposal",
  "abi": [
    {
      "constant": false,
      "inputs": [],
      "name": "action",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVoting",
      "outputs": [
        {
          "name": "voting",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.22;\n\nimport \"./IVoting.sol\";\nimport \"../IDaoBase.sol\";\n\n\n/**\n * @title IProposal \n * @dev This is the basic DAO Proposal interface. Each Proposal should have voting attached. \n * Proposal can do some action if voting is finished with 'yes' result. Or action can be empty. \n*/\ncontract IProposal {\n\tfunction action()public;\n\tfunction getVoting()public view returns(IVoting voting);\n\n\t// ???\n\t// function isOpen() public constant returns(bool);\n}\n\n",
  "sourcePath": "@thetta/core/contracts/governance/IProposal.sol",
  "ast": {
    "absolutePath": "@thetta/core/contracts/governance/IProposal.sol",
    "exportedSymbols": {
      "IProposal": [
        3512
      ]
    },
    "id": 3513,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3501,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".22"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "@thetta/core/contracts/governance/IVoting.sol",
        "file": "./IVoting.sol",
        "id": 3502,
        "nodeType": "ImportDirective",
        "scope": 3513,
        "sourceUnit": 3546,
        "src": "26:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@thetta/core/contracts/IDaoBase.sol",
        "file": "../IDaoBase.sol",
        "id": 3503,
        "nodeType": "ImportDirective",
        "scope": 3513,
        "sourceUnit": 3492,
        "src": "50:25:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title IProposal \n@dev This is the basic DAO Proposal interface. Each Proposal should have voting attached. \nProposal can do some action if voting is finished with 'yes' result. Or action can be empty. ",
        "fullyImplemented": false,
        "id": 3512,
        "linearizedBaseContracts": [
          3512
        ],
        "name": "IProposal",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 3506,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "action",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "334:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 3505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:0:11"
            },
            "scope": 3512,
            "src": "319:24:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 3511,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getVoting",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 3510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3509,
                  "name": "voting",
                  "nodeType": "VariableDeclaration",
                  "scope": 3511,
                  "src": "385:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVoting_$3545",
                    "typeString": "contract IVoting"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3508,
                    "name": "IVoting",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3545,
                    "src": "385:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3545",
                      "typeString": "contract IVoting"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "384:16:11"
            },
            "scope": 3512,
            "src": "345:56:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3513,
        "src": "297:168:11"
      }
    ],
    "src": "0:467:11"
  },
  "legacyAST": {
    "absolutePath": "@thetta/core/contracts/governance/IProposal.sol",
    "exportedSymbols": {
      "IProposal": [
        3512
      ]
    },
    "id": 3513,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3501,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".22"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:11"
      },
      {
        "absolutePath": "@thetta/core/contracts/governance/IVoting.sol",
        "file": "./IVoting.sol",
        "id": 3502,
        "nodeType": "ImportDirective",
        "scope": 3513,
        "sourceUnit": 3546,
        "src": "26:23:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@thetta/core/contracts/IDaoBase.sol",
        "file": "../IDaoBase.sol",
        "id": 3503,
        "nodeType": "ImportDirective",
        "scope": 3513,
        "sourceUnit": 3492,
        "src": "50:25:11",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": "@title IProposal \n@dev This is the basic DAO Proposal interface. Each Proposal should have voting attached. \nProposal can do some action if voting is finished with 'yes' result. Or action can be empty. ",
        "fullyImplemented": false,
        "id": 3512,
        "linearizedBaseContracts": [
          3512
        ],
        "name": "IProposal",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": null,
            "documentation": null,
            "id": 3506,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "action",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3504,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "334:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 3505,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:0:11"
            },
            "scope": 3512,
            "src": "319:24:11",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": null,
            "documentation": null,
            "id": 3511,
            "implemented": false,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getVoting",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "363:2:11"
            },
            "payable": false,
            "returnParameters": {
              "id": 3510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3509,
                  "name": "voting",
                  "nodeType": "VariableDeclaration",
                  "scope": 3511,
                  "src": "385:14:11",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IVoting_$3545",
                    "typeString": "contract IVoting"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 3508,
                    "name": "IVoting",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 3545,
                    "src": "385:7:11",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IVoting_$3545",
                      "typeString": "contract IVoting"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "384:16:11"
            },
            "scope": 3512,
            "src": "345:56:11",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3513,
        "src": "297:168:11"
      }
    ],
    "src": "0:467:11"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-09-08T22:00:56.405Z"
}